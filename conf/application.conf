# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"


# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"

# Custom error handler
play.http.errorHandler = "ErrorHandler"

play.http.router = prod.Routes


play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9437 localhost:9032 www.google-analytics.com data: localhost:12345 www.googletagmanager.com https://logx.optimizely.com https://*.optimizely.com https://optimizely.s3.amazonaws.com https://cdn-assets-prod.s3.amazonaws.com"

appName = "agent-subscription-frontend"
play.i18n.langs = ["en", "cy"]

# Play Modules
# ~~~~
# Additional play modules can be added here



surveyRedirectUrl = "http://localhost:9514/feedback/AGENTSUB"

mongodb {
  uri = "mongodb://localhost:27017/agent-subscription-frontend?rm.monitorRefreshMS=6000&rm.failover=default"
  session.expireAfterSeconds = 3600
  chainedsessiondetails {
    ttl = 900
  }
}

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }

    companyAuthSignInUrl = "http://localhost:9025/gg/sign-in"

    agent-assurance {
      host = localhost
      port = 9565
    }

    agent-mapping {
      host = localhost
      port = 9439
    }

    agent-mapping-frontend {
      external-url = "http://localhost:9438"
      start.path = "/agent-mapping/task-list/start"
    }

    agent-subscription {
      host = localhost
      port = 9436
    }

    agent-subscription-frontend {
      external-url = "http://localhost:9437"
    }

    agent-services-account-frontend {
      external-url = "http://localhost:9401"
      start.path = "/agent-services-account"
    }

    address-lookup-frontend {
      host = localhost
      port = 9028

      new-address-callback {
        url = "http://localhost:9437"
      }
    }

    sso {
      host = localhost
      port = 9974
    }

    government-gateway-registration-frontend {
      externalUrl = "http://localhost:8571"
    }

    contact-frontend {
      external-url = "http://localhost:9250"
    }
  }

}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

tracking-consent-frontend {
  gtm.container = "b"
}

features {
  agent-assurance-run = false
  enable-welsh-toggle = true
}

contact-frontend.host = "http://localhost:9250/contact/problem_reports_"

contactFormServiceIdentifier = "AOSS"

betaFeedbackUrl = ${contact-frontend.host}"/contact/beta-feedback?service="${contactFormServiceIdentifier}
betaFeedbackUnauthenticatedUrl = ${contact-frontend.host}"/contact/beta-feedback-unauthenticated?service="${contactFormServiceIdentifier}
reportAProblemPartialUrl = ${contact-frontend.host}"/contact/problem_reports_ajax?service="${contactFormServiceIdentifier}
reportAProblemNonJSUrl = ${contact-frontend.host}"/contact/problem_reports_nonjs?service="${contactFormServiceIdentifier}

government-gateway.url = "http://www.ref.gateway.gov.uk/"
companies-house.url="https://beta.companieshouse.gov.uk/"

timeoutDialog { //time until popup = timeout-seconds - timeout-countdown-seconds
  timeout-seconds=900
  timeout-countdown-seconds=120
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
      legacy = false
    }
  }
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

login.continue = "http://localhost:9437"
bas-gateway.url = "http://localhost:9553/bas-gateway/sign-in"


accessibility-statement.service-path = "/agent-subscription"
