# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
include "frontend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.FrontendFilters"

# Custom error handler
play.http.errorHandler = "ErrorHandler"

play.http.router = prod.Routes
play.modules.enabled += "FrontendModule"

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9437 localhost:9032 www.google-analytics.com data:"

appName = "agent-subscription-frontend"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

Dev {
  sosRedirectUrl = "http://localhost:8571/government-gateway-registration-frontend?accountType=agent&origin=unknown"
  surveyRedirectUrl = "http://localhost:9514/feedback-survey?origin=AGENTSUB"
  companyAuthSignInUrl = "http://localhost:9025/gg/sign-in"

  mongodb {
    uri = "mongodb://localhost:27017/agent-subscription-frontend"
    chainedsessiondetails {
      ttl = 900
    }
  }

  microservice {
    services {
      auth {
        host = localhost
        port = 8500
      }

      agent-assurance {
        host = localhost
        port = 9565
      }

      agent-mapping {
        host = localhost
        port = 9439
      }

      agent-subscription {
        host = localhost
        port = 9436
      }

      agent-services-account-frontend {
        external-url = "http://localhost:9401"
        start.path = "/agent-services-account"
      }

      address-lookup-frontend {
        host = localhost
        port = 9028

        journeyName = "agents-subscr"

        new-address-callback {
          url = "http://localhost:9437"
        }
      }

      cachable.session-cache {
        host = localhost
        port = 8400
        domain = keystore
      }

      sso {
        host = localhost
        port = 9974
      }
    }

  }
}

Test {
  sosRedirectUrl = "/government-gateway-registration-frontend?accountType=agent&origin=unknown"
  surveyRedirectUrl = "/feedback-survey?origin=AGENTSUB"
  companyAuthSignInUrl = "/gg/sign-in"

  mongodb {
    uri = "mongodb://localhost:27017/agent-subscription-frontend"
    chainedsessiondetails {
      ttl = 900
    }
  }

  microservice {
    services {
      auth {
        host = localhost
        port = 8500
      }

      agent-assurance {
        host = localhost
        port = 9565
      }

      agent-mapping {
        host = localhost
        port = 9439
      }

      agent-subscription {
        host = localhost
        port = 9436
      }

      agent-services-account-frontend {
        external-url = "http://localhost:9401"
        start.path = "/agent-services-account"
      }

      address-lookup-frontend {
        host = localhost
        port = 9028

        journeyName = "agents-subscr"

        new-address-callback {
          url = "/agent-subscription"
        }

      }

      cachable.session-cache {
        host = localhost
        port = 8400
        domain = keystore
      }

      sso {
        host = localhost
        port = 9974
      }

    }
  }
}

Prod {
  sosRedirectUrl = "/government-gateway-registration-frontend?accountType=agent&origin=unknown"
  surveyRedirectUrl = "/feedback-survey?origin=AGENTSUB"
  companyAuthSignInUrl = "/gg/sign-in"

  mongodb {
    uri = "mongodb://localhost:27017/agent-subscription-frontend"
    chainedsessiondetails {
      ttl = 900
    }
  }

  microservice {
    services {
      auth {
        host = auth.protected.mdtp
        port = 443
        protocol = https
      }

      agent-assurance {
        host = agent-assurance.protected.mdtp
        port = 443
        protocol = https
      }

      agent-mapping {
        host = agent-mapping.protected.mdtp
        port = 443
        protocol = https
      }

      agent-subscription {
        host = agent-subscription.protected.mdtp
        port = 443
        protocol = https
      }

      agent-services-account-frontend {
        external-url = "https://www.tax.service.gov.uk"
        start.path = "/agent-services-account"
      }

      address-lookup-frontend {
        host = address-lookup-frontend.public.mdtp
        port = 443
        protocol = https

        journeyName = "agents-subscr"

        new-address-callback {
          url = "/agent-subscription"
        }
      }

      cachable.session-cache {
        host = key-store.public.mdtp
        port = 443
        protocol = https
        domain = keystore
      }

      sso {
        host = sso.public.mdtp
        port = 443
        protocol = https
      }
    }
  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = N/A
  host = auto
}

assets {
  version = "3.0.2"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

features {
  agent-assurance-run = false
  agent-assurance-paye-check = true
  auto-map-agent-enrolments = true
}

contact-frontend.host = "http://localhost:9250/contact/problem_reports_"

contactFormServiceIdentifier = "AOSS"

betaFeedbackUrl = ${contact-frontend.host}"/contact/beta-feedback?service="${contactFormServiceIdentifier}
betaFeedbackUnauthenticatedUrl = ${contact-frontend.host}"/contact/beta-feedback-unauthenticated?service="${contactFormServiceIdentifier}
reportAProblemPartialUrl = ${contact-frontend.host}"/contact/problem_reports_ajax?service="${contactFormServiceIdentifier}
reportAProblemNonJSUrl = ${contact-frontend.host}"/contact/problem_reports_nonjs?service="${contactFormServiceIdentifier}

government-gateway.url = "http://www.ref.gateway.gov.uk/"

continueUrl {
  domainWhiteList = ["localhost","www.tax.service.gov.uk"]
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
      legacy = false
    }
  }
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

